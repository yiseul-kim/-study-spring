package com.mysite.sbb.user;

import java.util.Optional;

import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;

import lombok.RequiredArgsConstructor;

@RequiredArgsConstructor
@Service
public class UserSecurityService implements UserDetailsService {
	// Spring Security 에서 인증을 담당하는 서비스
	// UserDetailsService interface의 정의된 메소드를 오버라이딩해서 구현

	private final UserRepository userRepository;
	
	// 인증을 처리하는 메소드
	@Override
	public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
		// login_form.html에서 username, password 필드가 넘어오는 username을 인풋으로 받음.
		// DB에서 인풋으로 넘어오는 username 값을 DB에서 조회 
		Optional<SiteUser> _siteUser = userRepository.findByusername(username);
		
		if(_siteUser.isEmpty()) {
			//DB에서 해당 username이 존재하지 않는 경우
				//강제로 예외를 발생 시켜 뷰 페이지에서 오류 메세지를 출력함.
			throw new UsernameNotFoundException(username + "해당 사용자는 DB에서 찾을 수 없습니다.");
			
			
		}else {
			//DB에서 해당 username이 존재하는 경우 
			throw new UsernameNotFoundException(username + "해당 사용자는 DB에 있습니다.");
		}
		
		return null;
	}

	
	
}
